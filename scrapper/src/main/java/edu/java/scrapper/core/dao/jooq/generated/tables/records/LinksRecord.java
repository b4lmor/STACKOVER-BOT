/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.core.dao.jooq.generated.tables.records;

import edu.java.scrapper.core.dao.jooq.generated.tables.Links;
import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.time.LocalDate;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record4<Long, String, Integer, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LINKS.ID</code>.
     */
    public void setId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>LINKS.ID</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>LINKS.LVALUE</code>.
     */
    public void setLvalue(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>LINKS.LVALUE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 400)
    @NotNull
    public String getLvalue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>LINKS.HASHSUM</code>.
     */
    public void setHashsum(@Nullable Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>LINKS.HASHSUM</code>.
     */
    @Nullable
    public Integer getHashsum() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>LINKS.LAST_UPDATE_AT</code>.
     */
    public void setLastUpdateAt(@Nullable LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>LINKS.LAST_UPDATE_AT</code>.
     */
    @Nullable
    public LocalDate getLastUpdateAt() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, String, Integer, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, String, Integer, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Links.LINKS.ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Links.LINKS.LVALUE;
    }

    @Override
    @NotNull
    public Field<Integer> field3() {
        return Links.LINKS.HASHSUM;
    }

    @Override
    @NotNull
    public Field<LocalDate> field4() {
        return Links.LINKS.LAST_UPDATE_AT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public String component2() {
        return getLvalue();
    }

    @Override
    @Nullable
    public Integer component3() {
        return getHashsum();
    }

    @Override
    @Nullable
    public LocalDate component4() {
        return getLastUpdateAt();
    }

    @Override
    @NotNull
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public String value2() {
        return getLvalue();
    }

    @Override
    @Nullable
    public Integer value3() {
        return getHashsum();
    }

    @Override
    @Nullable
    public LocalDate value4() {
        return getLastUpdateAt();
    }

    @Override
    @NotNull
    public LinksRecord value1(@NotNull Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value2(@NotNull String value) {
        setLvalue(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value3(@Nullable Integer value) {
        setHashsum(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value4(@Nullable LocalDate value) {
        setLastUpdateAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord values(
        @NotNull Long value1,
        @NotNull String value2,
        @Nullable Integer value3,
        @Nullable LocalDate value4
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    @ConstructorProperties({"id", "lvalue", "hashsum", "lastUpdateAt"})
    public LinksRecord(
        @NotNull Long id,
        @NotNull String lvalue,
        @Nullable Integer hashsum,
        @Nullable LocalDate lastUpdateAt
    ) {
        super(Links.LINKS);

        setId(id);
        setLvalue(lvalue);
        setHashsum(hashsum);
        setLastUpdateAt(lastUpdateAt);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(edu.java.scrapper.core.dao.jooq.generated.tables.pojos.Links value) {
        super(Links.LINKS);

        if (value != null) {
            setId(value.getId());
            setLvalue(value.getLvalue());
            setHashsum(value.getHashsum());
            setLastUpdateAt(value.getLastUpdateAt());
        }
    }
}
