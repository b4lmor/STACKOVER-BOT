/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.core.dao.jooq.generated.tables.records;

import edu.java.scrapper.core.dao.jooq.generated.tables.Chats;
import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ChatsRecord extends UpdatableRecordImpl<ChatsRecord>
    implements Record4<Long, LocalDateTime, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CHATS.ID</code>.
     */
    public void setId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>CHATS.ID</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>CHATS.CREATED_AT</code>.
     */
    public void setCreatedAt(@Nullable LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>CHATS.CREATED_AT</code>.
     */
    @Nullable
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>CHATS.TG_CHAT_ID</code>.
     */
    public void setTgChatId(@NotNull Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>CHATS.TG_CHAT_ID</code>.
     */
    @NotNull
    public Long getTgChatId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>CHATS.IS_ACTIVE</code>.
     */
    public void setIsActive(@Nullable Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>CHATS.IS_ACTIVE</code>.
     */
    @Nullable
    public Boolean getIsActive() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, LocalDateTime, Long, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, LocalDateTime, Long, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Chats.CHATS.ID;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field2() {
        return Chats.CHATS.CREATED_AT;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return Chats.CHATS.TG_CHAT_ID;
    }

    @Override
    @NotNull
    public Field<Boolean> field4() {
        return Chats.CHATS.IS_ACTIVE;
    }

    @Override
    @NotNull
    public Long component1() {
        return getId();
    }

    @Override
    @Nullable
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    @NotNull
    public Long component3() {
        return getTgChatId();
    }

    @Override
    @Nullable
    public Boolean component4() {
        return getIsActive();
    }

    @Override
    @NotNull
    public Long value1() {
        return getId();
    }

    @Override
    @Nullable
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    @NotNull
    public Long value3() {
        return getTgChatId();
    }

    @Override
    @Nullable
    public Boolean value4() {
        return getIsActive();
    }

    @Override
    @NotNull
    public ChatsRecord value1(@NotNull Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord value2(@Nullable LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord value3(@NotNull Long value) {
        setTgChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord value4(@Nullable Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    @NotNull
    public ChatsRecord values(
        @NotNull Long value1,
        @Nullable LocalDateTime value2,
        @NotNull Long value3,
        @Nullable Boolean value4
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatsRecord
     */
    public ChatsRecord() {
        super(Chats.CHATS);
    }

    /**
     * Create a detached, initialised ChatsRecord
     */
    @ConstructorProperties({"id", "createdAt", "tgChatId", "isActive"})
    public ChatsRecord(
        @NotNull Long id,
        @Nullable LocalDateTime createdAt,
        @NotNull Long tgChatId,
        @Nullable Boolean isActive
    ) {
        super(Chats.CHATS);

        setId(id);
        setCreatedAt(createdAt);
        setTgChatId(tgChatId);
        setIsActive(isActive);
    }

    /**
     * Create a detached, initialised ChatsRecord
     */
    public ChatsRecord(edu.java.scrapper.core.dao.jooq.generated.tables.pojos.Chats value) {
        super(Chats.CHATS);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setTgChatId(value.getTgChatId());
            setIsActive(value.getIsActive());
        }
    }
}
